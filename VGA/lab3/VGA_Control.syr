Release 14.6 - xst P.68d (nt64)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.10 secs
 
--> Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 0.00 secs
Total CPU time to Xst completion: 0.10 secs
 
--> Reading design: VGA_Control.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Compilation
  3) Design Hierarchy Analysis
  4) HDL Analysis
  5) HDL Synthesis
     5.1) HDL Synthesis Report
  6) Advanced HDL Synthesis
     6.1) Advanced HDL Synthesis Report
  7) Low Level Synthesis
  8) Partition Report
  9) Final Report
	9.1) Device utilization summary
	9.2) Partition Resource Summary
	9.3) TIMING REPORT


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "VGA_Control.prj"
Input Format                       : mixed
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "VGA_Control"
Output Format                      : NGC
Target Device                      : xc3s500e-5-fg320

---- Source Options
Top Module Name                    : VGA_Control
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Mux Style                          : Auto
Decoder Extraction                 : YES
Priority Encoder Extraction        : Yes
Shift Register Extraction          : YES
Logical Shifter Extraction         : YES
XOR Collapsing                     : YES
ROM Style                          : Auto
Mux Extraction                     : Yes
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Multiplier Style                   : Auto
Automatic Register Balancing       : No

---- Target Options
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 24
Register Duplication               : YES
Slice Packing                      : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Yes
Use Synchronous Set                : Yes
Use Synchronous Reset              : Yes
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
Verilog 2001                       : YES
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Compilation                              *
=========================================================================
Compiling verilog file "VGA_DibujaFiguras.v" in library work
Compiling verilog file "VGA_ClockDiv.v" in library work
Module <VGA_DibujaFiguras> compiled
Compiling verilog file "RandomTubo.v" in library work
Module <VGA_ClockDiv> compiled
Compiling verilog file "MaquinaParajo.v" in library work
Module <RandomTubo> compiled
Compiling verilog file "FSM_Tubo2.v" in library work
Module <MaquinaPajaro> compiled
Compiling verilog file "FSM_CreaTubo.v" in library work
Module <FSM_Tubo2> compiled
Compiling verilog file "DeBounce.v" in library work
Module <FSM_CreaTubo> compiled
Compiling verilog file "Controlador7Segmentos.v" in library work
Module <DeBounce> compiled
Compiling verilog file "Contador.v" in library work
Module <Controlador7Segmentos> compiled
Compiling verilog file "comparadorChoque.v" in library work
Module <Contador> compiled
Compiling verilog file "VGA_Control.v" in library work
Module <comparadorChoque> compiled
Module <VGA_Control> compiled
No errors in compilation
Analysis of file <"VGA_Control.prj"> succeeded.
 

=========================================================================
*                     Design Hierarchy Analysis                         *
=========================================================================
Analyzing hierarchy for module <VGA_Control> in library <work>.

Analyzing hierarchy for module <DeBounce> in library <work>.

Analyzing hierarchy for module <Controlador7Segmentos> in library <work> with parameters.
	Seg1 = "1110"
	Seg2 = "1101"
	Seg3 = "1011"
	Seg4 = "0111"
	Seg5 = "0111"

Analyzing hierarchy for module <Contador> in library <work>.

Analyzing hierarchy for module <VGA_ClockDiv> in library <work>.

Analyzing hierarchy for module <MaquinaPajaro> in library <work> with parameters.
	a = "00000"
	b = "00001"
	c = "00010"
	cero = "0"
	d = "00011"
	maximo = "00111100000"
	minimo = "00000100000"
	uno = "1"

Analyzing hierarchy for module <RandomTubo> in library <work>.

Analyzing hierarchy for module <FSM_CreaTubo> in library <work> with parameters.
	a = "001"
	b = "010"
	c = "011"
	cero = "0"
	d = "100"
	e = "101"
	uno = "1"

Analyzing hierarchy for module <FSM_Tubo2> in library <work> with parameters.
	a = "001"
	b = "010"
	c = "011"
	cero = "0"
	d = "100"
	e = "101"
	uno = "1"

Analyzing hierarchy for module <comparadorChoque> in library <work>.

Analyzing hierarchy for module <VGA_DibujaFiguras> in library <work> with parameters.
	hbp = "00000000000000000000000010010000"
	hfp = "00000000000000000000001100010000"
	hpixels = "00000000000000000000001100100000"
	hpulse = "00000000000000000000000001100000"
	vbp = "00000000000000000000000000011111"
	vfp = "00000000000000000000000111111111"
	vlines = "00000000000000000000001000001001"
	vpulse = "00000000000000000000000000000010"


=========================================================================
*                            HDL Analysis                               *
=========================================================================
Analyzing top module <VGA_Control>.
Module <VGA_Control> is correct for synthesis.
 
Analyzing module <DeBounce> in library <work>.
Module <DeBounce> is correct for synthesis.
 
Analyzing module <Controlador7Segmentos> in library <work>.
	Seg1 = 4'b1110
	Seg2 = 4'b1101
	Seg3 = 4'b1011
	Seg4 = 4'b0111
	Seg5 = 4'b0111
Module <Controlador7Segmentos> is correct for synthesis.
 
Analyzing module <Contador> in library <work>.
Module <Contador> is correct for synthesis.
 
Analyzing module <VGA_ClockDiv> in library <work>.
Module <VGA_ClockDiv> is correct for synthesis.
 
Analyzing module <MaquinaPajaro> in library <work>.
	a = 5'b00000
	b = 5'b00001
	c = 5'b00010
	cero = 1'b0
	d = 5'b00011
	maximo = 11'b00111100000
	minimo = 11'b00000100000
	uno = 1'b1
Module <MaquinaPajaro> is correct for synthesis.
 
Analyzing module <RandomTubo> in library <work>.
Module <RandomTubo> is correct for synthesis.
 
Analyzing module <FSM_CreaTubo> in library <work>.
	a = 3'b001
	b = 3'b010
	c = 3'b011
	cero = 1'b0
	d = 3'b100
	e = 3'b101
	uno = 1'b1
WARNING:Xst:905 - "FSM_CreaTubo.v" line 53: One or more signals are missing in the sensitivity list of always block. To enable synthesis of FPGA/CPLD hardware, XST will assume that all necessary signals are present in the sensitivity list. Please note that the result of the synthesis may differ from the initial design specification. The missing signals are:
   <cambio>
Module <FSM_CreaTubo> is correct for synthesis.
 
Analyzing module <FSM_Tubo2> in library <work>.
	a = 3'b001
	b = 3'b010
	c = 3'b011
	cero = 1'b0
	d = 3'b100
	e = 3'b101
	uno = 1'b1
WARNING:Xst:905 - "FSM_Tubo2.v" line 53: One or more signals are missing in the sensitivity list of always block. To enable synthesis of FPGA/CPLD hardware, XST will assume that all necessary signals are present in the sensitivity list. Please note that the result of the synthesis may differ from the initial design specification. The missing signals are:
   <cambio>
Module <FSM_Tubo2> is correct for synthesis.
 
Analyzing module <comparadorChoque> in library <work>.
Module <comparadorChoque> is correct for synthesis.
 
Analyzing module <VGA_DibujaFiguras> in library <work>.
	hbp = 32'sb00000000000000000000000010010000
	hfp = 32'sb00000000000000000000001100010000
	hpixels = 32'sb00000000000000000000001100100000
	hpulse = 32'sb00000000000000000000000001100000
	vbp = 32'sb00000000000000000000000000011111
	vfp = 32'sb00000000000000000000000111111111
	vlines = 32'sb00000000000000000000001000001001
	vpulse = 32'sb00000000000000000000000000000010
WARNING:Xst:905 - "VGA_DibujaFiguras.v" line 118: One or more signals are missing in the sensitivity list of always block. To enable synthesis of FPGA/CPLD hardware, XST will assume that all necessary signals are present in the sensitivity list. Please note that the result of the synthesis may differ from the initial design specification. The missing signals are:
   <PosVPajaro>, <PosHTubo1>, <PosVTubo1>, <PosHTubo2>, <PosVTubo2>
Module <VGA_DibujaFiguras> is correct for synthesis.
 

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Performing bidirectional port resolution...

Synthesizing Unit <DeBounce>.
    Related source file is "DeBounce.v".
    Found 1-bit register for signal <debounced>.
    Found 8-bit register for signal <rege>.
    Summary:
	inferred   9 D-type flip-flop(s).
Unit <DeBounce> synthesized.


Synthesizing Unit <Controlador7Segmentos>.
    Related source file is "Controlador7Segmentos.v".
    Found 16x7-bit ROM for signal <Leds7Seg$mux0000> created at line 138.
    Found 4-bit register for signal <Enable7Seg>.
    Found 32-bit up counter for signal <count>.
    Found 4-bit register for signal <Display1>.
    Found 4-bit register for signal <Display2>.
    Found 4-bit register for signal <Display3>.
    Found 4-bit register for signal <Display4>.
    Summary:
	inferred   1 ROM(s).
	inferred   1 Counter(s).
	inferred  20 D-type flip-flop(s).
Unit <Controlador7Segmentos> synthesized.


Synthesizing Unit <Contador>.
    Related source file is "Contador.v".
    Found 4-bit register for signal <centesimas>.
    Found 4-bit up counter for signal <unidadesMillar>.
    Found 4-bit up counter for signal <unidades>.
    Found 4-bit up counter for signal <decimas>.
    Found 4-bit adder for signal <centesimas$addsub0000> created at line 48.
    Summary:
	inferred   3 Counter(s).
	inferred   4 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <Contador> synthesized.


Synthesizing Unit <VGA_ClockDiv>.
    Related source file is "VGA_ClockDiv.v".
    Found 25-bit up counter for signal <q>.
    Summary:
	inferred   1 Counter(s).
Unit <VGA_ClockDiv> synthesized.


Synthesizing Unit <MaquinaPajaro>.
    Related source file is "MaquinaParajo.v".
INFO:Xst:2117 - HDL ADVISOR - Mux Selector <state> of Case statement line 50 was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
   	- add an 'INIT' attribute on signal <state> (optimization is then done without any risk)
   	- use the attribute 'signal_encoding user' to avoid onehot optimization
   	- use the attribute 'safe_implementation yes' to force XST to perform a safe (but less efficient) optimization
    Using one-hot encoding for signal <state>.
    Found 11-bit register for signal <posY>.
    Found 11-bit addsub for signal <posY$share0000> created at line 114.
    Found 4-bit register for signal <state>.
    Summary:
	inferred  11 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <MaquinaPajaro> synthesized.


Synthesizing Unit <RandomTubo>.
    Related source file is "RandomTubo.v".
    Found 10-bit register for signal <posicion>.
    Found 10-bit up counter for signal <contador>.
    Summary:
	inferred   1 Counter(s).
	inferred  10 D-type flip-flop(s).
Unit <RandomTubo> synthesized.


Synthesizing Unit <FSM_CreaTubo>.
    Related source file is "FSM_CreaTubo.v".
    Found finite state machine <FSM_0> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 7                                              |
    | Inputs             | 2                                              |
    | Outputs            | 4                                              |
    | Clock              | clk                       (rising_edge)        |
    | Power Up State     | 001                                            |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 10-bit register for signal <posx>.
    Found 1-bit register for signal <termina>.
    Found 1-bit register for signal <random>.
    Found 1-bit register for signal <cambio>.
    Found 10-bit subtractor for signal <posx$addsub0000> created at line 115.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  13 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <FSM_CreaTubo> synthesized.


Synthesizing Unit <FSM_Tubo2>.
    Related source file is "FSM_Tubo2.v".
    Found finite state machine <FSM_1> for signal <state>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 6                                              |
    | Inputs             | 2                                              |
    | Outputs            | 4                                              |
    | Clock              | clk                       (rising_edge)        |
    | Power Up State     | 001                                            |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 10-bit register for signal <posx>.
    Found 10-bit register for signal <posy>.
    Found 1-bit register for signal <termina>.
    Found 1-bit register for signal <cambio>.
    Found 10-bit subtractor for signal <posx$addsub0000> created at line 116.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  22 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <FSM_Tubo2> synthesized.


Synthesizing Unit <comparadorChoque>.
    Related source file is "comparadorChoque.v".
    Found 1-bit register for signal <choque>.
    Found 11-bit subtractor for signal <choque$addsub0000> created at line 34.
    Found 11-bit subtractor for signal <choque$addsub0001> created at line 34.
    Found 11-bit comparator greatequal for signal <choque$cmp_ge0000> created at line 34.
    Found 10-bit comparator greater for signal <choque$cmp_gt0000> created at line 34.
    Found 10-bit comparator lessequal for signal <choque$cmp_le0000> created at line 34.
    Found 10-bit comparator lessequal for signal <choque$cmp_le0001> created at line 34.
    Summary:
	inferred   1 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
	inferred   4 Comparator(s).
Unit <comparadorChoque> synthesized.


Synthesizing Unit <VGA_DibujaFiguras>.
    Related source file is "VGA_DibujaFiguras.v".
    Found 11-bit adder for signal <$add0004> created at line 131.
    Found 11-bit adder for signal <$add0006> created at line 138.
    Found 13-bit subtractor for signal <$sub0000> created at line 123.
    Found 13-bit subtractor for signal <$sub0001> created at line 131.
    Found 13-bit subtractor for signal <$sub0002> created at line 138.
    Found 10-bit adder carry out for signal <add0000$addsub0000> created at line 123.
    Found 10-bit adder carry out for signal <add0001$addsub0000> created at line 131.
    Found 10-bit adder carry out for signal <add0002$addsub0000> created at line 138.
    Found 10-bit adder carry out for signal <add0003$addsub0000> created at line 131.
    Found 10-bit adder carry out for signal <add0005$addsub0000> created at line 138.
    Found 11-bit adder for signal <blue$addsub0000> created at line 131.
    Found 11-bit adder for signal <blue$addsub0001> created at line 138.
    Found 11-bit comparator lessequal for signal <blue$cmp_le0000> created at line 131.
    Found 11-bit comparator lessequal for signal <blue$cmp_le0001> created at line 138.
    Found 11-bit comparator greatequal for signal <green$cmp_ge0000> created at line 131.
    Found 11-bit comparator greatequal for signal <green$cmp_ge0001> created at line 131.
    Found 11-bit comparator greatequal for signal <green$cmp_ge0002> created at line 138.
    Found 11-bit comparator greatequal for signal <green$cmp_ge0003> created at line 138.
    Found 11-bit comparator lessequal for signal <green$cmp_le0000> created at line 131.
    Found 11-bit comparator lessequal for signal <green$cmp_le0001> created at line 138.
    Found 13-bit comparator less for signal <green$cmp_lt0000> created at line 131.
    Found 13-bit comparator less for signal <green$cmp_lt0001> created at line 138.
    Found 10-bit up counter for signal <hc>.
    Found 10-bit comparator less for signal <hc$cmp_lt0000> created at line 71.
    Found 10-bit comparator less for signal <hsync$cmp_lt0000> created at line 93.
    Found 10-bit comparator greatequal for signal <red$cmp_ge0000> created at line 120.
    Found 13-bit comparator greatequal for signal <red$cmp_ge0001> created at line 123.
    Found 10-bit comparator greater for signal <red$cmp_gt0000> created at line 123.
    Found 10-bit comparator lessequal for signal <red$cmp_le0000> created at line 123.
    Found 11-bit comparator lessequal for signal <red$cmp_le0001> created at line 123.
    Found 10-bit comparator less for signal <red$cmp_lt0000> created at line 120.
    Found 10-bit up counter for signal <vc>.
    Found 10-bit comparator less for signal <vc$cmp_lt0000> created at line 80.
    Found 10-bit comparator less for signal <vsync$cmp_lt0000> created at line 94.
    Summary:
	inferred   2 Counter(s).
	inferred  12 Adder/Subtractor(s).
	inferred  20 Comparator(s).
Unit <VGA_DibujaFiguras> synthesized.


Synthesizing Unit <VGA_Control>.
    Related source file is "VGA_Control.v".
WARNING:Xst:646 - Signal <luz> is assigned but never used. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:1780 - Signal <llegaPos> is never used or assigned. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:1780 - Signal <decremento> is never used or assigned. This unconnected signal will be trimmed during the optimization process.
WARNING:Xst:653 - Signal <clr> is used but never assigned. This sourceless signal will be automatically connected to value 0.
Unit <VGA_Control> synthesized.

INFO:Xst:1767 - HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.

=========================================================================
HDL Synthesis Report

Macro Statistics
# ROMs                                                 : 1
 16x7-bit ROM                                          : 1
# Adders/Subtractors                                   : 18
 10-bit adder carry out                                : 5
 10-bit subtractor                                     : 2
 11-bit adder                                          : 4
 11-bit addsub                                         : 1
 11-bit subtractor                                     : 2
 13-bit subtractor                                     : 3
 4-bit adder                                           : 1
# Counters                                             : 8
 10-bit up counter                                     : 3
 25-bit up counter                                     : 1
 32-bit up counter                                     : 1
 4-bit up counter                                      : 3
# Registers                                            : 24
 1-bit register                                        : 9
 10-bit register                                       : 4
 11-bit register                                       : 1
 4-bit register                                        : 7
 8-bit register                                        : 3
# Comparators                                          : 24
 10-bit comparator greatequal                          : 1
 10-bit comparator greater                             : 2
 10-bit comparator less                                : 5
 10-bit comparator lessequal                           : 3
 11-bit comparator greatequal                          : 5
 11-bit comparator lessequal                           : 5
 13-bit comparator greatequal                          : 1
 13-bit comparator less                                : 2

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

Analyzing FSM <FSM_1> for best encoding.
Optimizing FSM <MaquinaTubo2/state/FSM> on signal <state[1:4]> with one-hot encoding.
-------------------
 State | Encoding
-------------------
 001   | 0001
 010   | 0010
 011   | 0100
 100   | 1000
-------------------
Analyzing FSM <FSM_0> for best encoding.
Optimizing FSM <MaquinaTuboCreador/state/FSM> on signal <state[1:2]> with sequential encoding.
-------------------
 State | Encoding
-------------------
 001   | 00
 010   | 01
 011   | 10
 100   | 11
-------------------
